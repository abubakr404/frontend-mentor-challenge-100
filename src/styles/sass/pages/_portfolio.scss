.portfolio {
  background: {
    repeat: no-repeat;
    size: cover;
    image: url(../images/portfolio-pattern.svg), var(--portfolio-surface);
    blend: {
      mode: $portfolioSurfaceBlendMode;
    }
  }
  .container {
    gap: 2.5rem 2.5%;
    @include in(toSmall) {
      grid-template-columns: 1fr;
    }
  }
  .work-card {
    position: relative;
    z-index: 1;
    &::before {
      @extend %primaryBackground;
      content: "";
      position: absolute;
      z-index: -1;
      border-radius: 0.625rem;
      height: 85%;
      width: 85%;
      min-width: calc(17rem + 4vw);
      right: 0;
      bottom: 0;
      @include in(toSmall) {
        height: 100%;
        width: 100%;
      }
    }
    .card-top {
      @extend %fRowCY;
      @include in(toSmall) {
        padding: 1rem 1.25rem 0;
      }
    }
    .works-viewer {
      flex: 4.5;
    }
    .work-shuffle {
      @extend %fRowC;
      gap: 0.25rem;
    }
    .screen {
      @extend %buttonRest;
      @extend %transition;
      position: relative;
      border-radius: 0.75rem 0.75rem 0 0;
      padding: 0.3125rem 0.75rem;
      font-size: 1.125rem;
      @include in(toSmall) {
        padding: 0.25rem 0.75rem;
        font-size: 1rem;
      }
      &:focus {
        outline: none;
      }
      &::before,
      &::after {
        @extend %transition;
        --box-shadow-color: transparent;
        content: "";
        position: absolute;
        bottom: 0;
        border-radius: 0;
        width: 1.5rem;
        height: 0.75rem;
        z-index: -1;
        opacity: 0;
      }
      &::before {
        right: calc(100% - 0.5rem);
        box-shadow: inset -0.5rem -0.0625rem 0 0 var(--box-shadow-color);
      }
      &::after {
        left: calc(100% - 0.5rem);
        box-shadow: inset 0.5rem -0.0625rem 0 0 var(--box-shadow-color);
      }
      &:hover,
      &:focus,
      &.active {
        background-color: var(--border-gradient);
        &::before,
        &::after {
          --box-shadow-color: var(--border-gradient);
          opacity: 1;
        }
        &::before {
          border-radius: 0 0 0.75rem 0;
        }
        &::after {
          border-radius: 0 0 0 0.75rem;
        }
      }
    }
    .imgs-container {
      --imgs-container-height: 20rem;
      height: var(--imgs-container-height);
      border-radius: 0.25rem;
      box-shadow: 0 0 0 0.125rem var(--border-gradient),
        inset 0 0 0.125rem 0 var(--border-gradient);
      overflow: hidden;
      position: relative;
      background-color: var(--border-gradient);
      img {
        --start-point: calc(0% + var(--imgs-container-height));
        width: 100%;
        position: absolute;
        bottom: 100%;
        left: 0%;
        opacity: 0;
        transform: translateY(100%);
        &.active {
          opacity: 1;
        }
        &:not(.active) {
          display: none;
        }
      }
    }
    .technologies {
      @extend %fRowS;
      flex: 1;
      @include in(toSmall) {
        flex: 0;
      }
    }
    .technologies-container {
      @extend %fCol;
      border-radius: 0 0.375rem 0.375rem 0;
      padding: 0.5rem;
      margin-top: 5rem;
      border: solid var(--border-gradient);
      border-width: 0.125rem 0.125rem 0.3125rem 0;
      button {
        @extend %buttonRest;
        @extend %fCenter;
        font-size: 1.125rem;
        min-width: 1.75rem;
        min-height: 2rem;
        &:focus {
          @extend %focus;
        }
        @include in(toSmall) {
          font-size: 1rem;
          min-width: 1rem;
          min-height: 1.5rem;
        }
      }
    }
    .card-bottom {
      @extend %fCol;
      gap: 0.5rem;
      max-width: 85%;
      min-width: calc(17rem + 4vw);
      margin-left: auto;
      @include in(toSmall) {
        max-width: 100%;
      }
    }
    .card-info {
      @extend %fColC;
      gap: 0.3125rem;
      padding: 0.625rem 0.625rem 0;
    }
    .card-title {
      color: inherit;
      font-size: 1.5rem;
      @include in(toSmall) {
        font-size: 1.25rem;
      }
    }
    .card-text {
      @extend %fCenterS;
      color: inherit;
      text-decoration: none;
      gap: 0.75rem;
      font-size: 1.125rem;
      &:focus {
        @extend %focus;
      }
      @include in(toSmall) {
        font-size: 1rem;
        gap: 0.5rem;
      }
    }
    .card-actions {
      padding: 1rem;
      @include twoColG(1rem);
      @include in(toSmall) {
        grid-template-columns: 1fr;
      }
      .action {
        @extend %fRowC;
        gap: 0.5rem;
        --Ab-btn-padding-x: 0.625rem;
        --Ab-btn-font-weight: 600;
        i {
          font-size: 1.125rem;
        }
      }
    }
    &.zoomed {
      z-index: 9;
      .card-top {
        position: fixed;
        bottom: calc(52% - var(--header-height) / 2);
        right: 50%;
        transform: translate(50%, 50%);
        width: 50%;
        @include in(toSmall) {
          width: 90%;
        }
        &:before {
          content: "";
          background-color: var(--border-gradient);
          width: calc(101vw + var(--header-height));
          height: calc(101vh + var(--header-height));
          opacity: 0.8;
          z-index: -1;
          @extend %aCenter;
        }
      }
      .works-viewer {
        width: 80vh;
      }
      .imgs-container {
        overflow: auto;
        --imgs-container-height: 80vh;
        &:hover {
          cursor: zoom-out;
        }
      }
      .technologies {
        flex: 0 auto;
      }
      .technologies-container {
        background-color: var(--light-on-primary-container);
      }
      .card-bottom {
        height: 100%;
        justify-content: flex-end;
      }
    }
    &:not(.zoomed) {
      .screen {
        &:not(.active) {
          @include in(fromMedium) {
            color: var(--border-gradient);
          }
        }
        &:focus,
        &:hover {
          color: inherit;
        }
      }
      img {
        bottom: var(--start-point);
        transition: 1s linear 1s;
      }
      .imgs-container {
        &:hover {
          cursor: zoom-in;
          img {
            &.active {
              transition: 10s linear 1s;
              transform: translateY(var(--start-point));
            }
          }
        }
      }
    }
  }
}
