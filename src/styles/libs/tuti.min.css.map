{"version":3,"sources":["_groups.scss","../../sass/helpers/mixins/_elemensMixin.scss","tuti.scss","../../sass/helpers/mixins/_gridsMixin.scss","../../sass/helpers/mixins/_mediaMixin.scss"],"names":[],"mappings":"AAQA,WACE,YAAA,OACA,SAAA,OACA,cAAA,SAGF,KAAA,IACE,SAAA,SACA,QAAA,EAqCF,OCyBE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,OAzEE,kBAAA,MAAA,eAAA,MAAA,YAAA,WDmDJ,OCqBE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,OAvEE,kBAAA,OAAA,eAAA,OAAA,YAAA,ODqEJ,OCCE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,OAvEE,kBAAA,OAAA,eAAA,OAAA,YAAA,ODqGJ,SAAA,UAAA,UChFE,QAAA,YAAA,QAAA,YAAA,QAAA,KArBE,kBAAA,OAAA,eAAA,OAAA,YAAA,OAYA,iBAAA,OAAA,cAAA,OAAA,gBAAA,ODqGJ,UAAA,WC7DE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,mBAAA,WAAA,sBAAA,OAAA,mBAAA,IAAA,eAAA,IACA,iBAAA,QAAA,cAAA,QAAA,gBAAA,cAEE,kBAAA,OAAA,eAAA,OAAA,YAAA,OD6DJ,WCjEE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,OACA,iBAAA,QAAA,cAAA,QAAA,gBAAA,cAEE,kBAAA,OAAA,eAAA,OAAA,YAAA,ODiEJ,SAAA,UCrEE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,mBAAA,WAAA,sBAAA,OAAA,mBAAA,IAAA,eAAA,IACA,iBAAA,QAAA,cAAA,QAAA,gBAAA,cDuEF,UCzEE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,OACA,iBAAA,QAAA,cAAA,QAAA,gBAAA,cD2FF,SCtBE,SAAA,SACA,IAAA,EACA,MAAA,EACA,MAAA,KACA,OAAA,KACA,iBAAA,eC5HF,UACE,mBAAA,SAAA,sBAAA,OAAA,mBAAA,OAAA,eAAA,OA8BF,YCxBE,QAAA,KACA,sBAAA,uCACA,IAAA,OCJE,wBF0BJ,YAGI,sBAAA,KAIJ,YC/BE,QAAA,KACA,sBAAA,wCACA,IAAA,OCJE,wBFiCJ,YAGI,sBAAA,KAQJ,YACE,QAAA,KACF,IAAA,KACA,MAAA,kBACA,cAAA,QACA,OAAA,KAAA,EACA,SAAA,OACA,kBACE,YAAA,IACA,eAAA,WAEF,0BACE,iBAAA,8BAGA,6BACE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,IAAA,SACA,kBAAA,OAAA,eAAA,OAAA,YAAA,OAEJ,yCACI,iBAAA,8BAGJ,wBAAA,0BAEE,cAAA,QACA,OAAA,MACA,aAAA,QAAA,SAAA,SAAA,QAEF,yBAAA,0BAAA,uBAGE,QAAA,KACA,sBAAA,oCACA,kBAAA,OAAA,eAAA,OAAA,YAAA,OACA,QAAA,QAAA,KACA,WAAA,OAEF,2BACE,iBAAA,QACA,QAAA,KACA,MAAA,KACA,QAAA,KACA,IAAA,QACA,cAAA,SACA,wCACE,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,IAAA,QACA,cAAA,KAEF,iCAAA,kCAEE,iBAAA,QACA,cAAA,QACA,OAAA,QAEF,iCACE,QAAA,GACA,MAAA,IAEF,kCACE,QAAA,GACA,MAAA,IAGJ,yBACE,cAAA,QACA,2BACE,MAAA,QACA,YAAA,IACA,OAAA,QAEF,2BACE,OAAA,EACA,QAAA,QAAA,KACA,WAAA,OACA,iBAAA,4BACA,YAAA","file":"tuti.min.css","sourcesContent":["%transition {\r\n  transition: var(--main-transition);\r\n}\r\n\r\n%bold {\r\n  font-weight: bold;\r\n}\r\n\r\n%textCiper {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n%z1 {\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n// %sectionBackground {\r\n//   background-color: var(--section-background);\r\n// }\r\n\r\n%inversButton {\r\n  background-color: var(--main-color);\r\n  color: var(--background-color);\r\n}\r\n\r\n%sectionPadding {\r\n  padding: {\r\n    top: var(--main-padding-top);\r\n    bottom: var(--main-padding-bottom);\r\n  }\r\n  @include in(toSmall) {\r\n    padding: {\r\n      top: 2rem;\r\n      bottom: 2rem;\r\n    }\r\n  }\r\n}\r\n\r\n%oneColG {\r\n  @include oneColG;\r\n}\r\n\r\n%twoColG {\r\n  @include twoColG;\r\n}\r\n\r\n%fCol {\r\n  @include fCol;\r\n}\r\n\r\n%fColS {\r\n  @include fCol(start);\r\n}\r\n\r\n%fColC {\r\n  @include fCol(center);\r\n}\r\n\r\n%fRowY {\r\n  @include fRowY;\r\n}\r\n\r\n%fRowSY {\r\n  @include fRowY(start);\r\n}\r\n\r\n%fRowCY {\r\n  @include fRowY(center);\r\n}\r\n\r\n%fRowEY {\r\n  @include fRowY(end);\r\n}\r\n\r\n%fColC {\r\n  @include fCol(center);\r\n}\r\n\r\n%fRow {\r\n  @include fRow;\r\n}\r\n\r\n%fRowS {\r\n  @include fRow(start);\r\n}\r\n\r\n%fRowC {\r\n  @include fRow(center);\r\n}\r\n\r\n%fRowE {\r\n  @include fRow(end);\r\n}\r\n\r\n%hPCenter {\r\n  @include hPCenter;\r\n}\r\n\r\n%vPCenter {\r\n  @include vPCenter;\r\n}\r\n\r\n%fCenterS {\r\n  @include fCenter(center, flex-start);\r\n}\r\n\r\n%fCenter {\r\n  @include fCenter;\r\n}\r\n\r\n%fCenterE {\r\n  @include fCenter(center, flex-end);\r\n}\r\n\r\n%aCenter {\r\n  @include aCenter;\r\n}\r\n\r\n%fSpacerXC,\r\n%fSpacerC {\r\n  @include fSpacer;\r\n}\r\n%fSpacerYC {\r\n  @include fSpacer(column);\r\n}\r\n\r\n%fSpacerX,\r\n%fSpacer {\r\n  @include fSpacer(row, false);\r\n}\r\n%fSpacerY {\r\n  @include fSpacer(column, false);\r\n}\r\n\r\n%aRest {\r\n  @include aRest;\r\n}\r\n\r\n%ulRest {\r\n  @include ulRest;\r\n}\r\n\r\n%buttonRest {\r\n  @include buttonRest;\r\n}\r\n\r\n%textareaRest {\r\n  @include textareaRest;\r\n}\r\n\r\n%overlay {\r\n  @include overlay;\r\n}\r\n\r\n// %mainBoxShadow {\r\n//   box-shadow: 0 0.125rem 1rem 0 rgba($headingsColor, 0.1);\r\n// }\r\n\r\n%dotedBackground {\r\n  position: absolute;\r\n  z-index: 0;\r\n  &:first-of-type {\r\n    transform: translateY(100%);\r\n    top: 0;\r\n    right: 0;\r\n  }\r\n  &:last-of-type {\r\n    transform: translateY(-100%);\r\n    bottom: 0;\r\n    left: 0;\r\n  }\r\n}\r\n\r\n// %boxCard {\r\n//   position: absolute;\r\n//   @extend %vPCenter;\r\n//   // background-color: rgba($altBackgroundColor, 0.7);\r\n//   padding: 3rem;\r\n//   display: flex;\r\n//   justify-content: flex-end;\r\n//   z-index: 1;\r\n//   @include in(toSmall) {\r\n//     width: 100% !important;\r\n//     justify-content: center;\r\n//   }\r\n// }\r\n\r\n%spikesTop {\r\n  @include spikes(var(--background-color), 2rem);\r\n}\r\n\r\n%spikesBottom {\r\n  @include spikes(var(--background-color), 2rem, 100%, bottom);\r\n}\r\n","//\r\n\r\n@mixin align($align: stretch) {\r\n  @if $align == stretch {\r\n    align-items: stretch;\r\n  } @else if $align == start {\r\n    align-items: flex-start;\r\n  } @else if $align == center {\r\n    align-items: center;\r\n  } @else if $align == end {\r\n    align-items: flex-end;\r\n  }\r\n}\r\n\r\n@mixin justify($justify: stretch) {\r\n  @if $justify == stretch {\r\n    justify-content: stretch;\r\n  } @else if $justify == start {\r\n    justify-content: flex-start;\r\n  } @else if $justify == center {\r\n    justify-content: center;\r\n  } @else if $justify == end {\r\n    justify-content: flex-end;\r\n  }\r\n}\r\n\r\n// mixin fCenter is mixin for make the selector flex and make content center\r\n\r\n@mixin fCenter($align: center, $justify: center) {\r\n  display: flex;\r\n  @include align($align);\r\n  @include justify($justify);\r\n}\r\n\r\n// mixin aCenter is mixin for make the selector in center of the screen by use position absolute\r\n\r\n@mixin aCenter {\r\n  position: absolute;\r\n  right: 50%;\r\n  bottom: 50%;\r\n  transform: translate(50%, 50%);\r\n}\r\n\r\n// mixin vPCenter is mixin for make the selector in center of the line vertecl\r\n\r\n@mixin vPCenter {\r\n  bottom: 50%;\r\n  transform: translateY(50%);\r\n}\r\n\r\n// mixin hPCenter is mixin for make the selector in center of the line horizentl\r\n\r\n@mixin hPCenter {\r\n  right: 50%;\r\n  transform: translateX(50%);\r\n}\r\n\r\n// mixin fSpacer is mixin for make space between items in each direction by display the element flex\r\n\r\n@mixin fSpacer($direction: row, $alignCenter: true) {\r\n  display: flex;\r\n  flex-direction: if($direction == column, column, row);\r\n  justify-content: space-between;\r\n  @if $alignCenter != false {\r\n    align-items: center;\r\n  }\r\n}\r\n\r\n// mixin fGap is mixin for make element display flex and has option to control the gap\r\n\r\n@mixin fGap($gap: 1rem) {\r\n  display: flex;\r\n  gap: $gap;\r\n}\r\n\r\n// mixin fCol is mixin for make flex and its direction is column and has option to control the align\r\n\r\n@mixin fCol($align: stretch) {\r\n  display: flex;\r\n  flex-direction: column;\r\n  @include align($align);\r\n}\r\n\r\n@mixin fColX($align: stretch) {\r\n  @include fCol($align);\r\n}\r\n\r\n@mixin fColY($jusify: stretch) {\r\n  @include justify($justify);\r\n}\r\n\r\n// mixin fRow is mixin for make flex and its direction is row and has option to control the jusify content\r\n\r\n@mixin fRow($justify: stretch) {\r\n  display: flex;\r\n  flex-direction: row;\r\n  @include justify($justify);\r\n}\r\n@mixin fRowX($justify: stretch) {\r\n  @include fRow($justify);\r\n}\r\n@mixin fRowY($align: stretch) {\r\n  display: flex;\r\n  flex-direction: row;\r\n  @include align($align);\r\n}\r\n\r\n// mixin radiBox is mixin make the first element has radius border in two side and the last element\r\n// has two radius border in opsiet side\r\n// the prameter $radius for the value of the radius and the prameter $direction for the direction of box\r\n// vertecl or horizentl\r\n\r\n@mixin radiBox($radius, $direction: true) {\r\n  &:first-of-type {\r\n    border-radius: if($direction, $radius 0 0 $radius, $radius $radius 0 0);\r\n  }\r\n  &:last-of-type {\r\n    border-radius: if($direction, 0 $radius $radius 0, 0 0 $radius $radius);\r\n  }\r\n}\r\n\r\n// overlay mixin is genral mixin can make overlay for all elements\r\n\r\n@mixin overlay(\r\n  $color: #000,\r\n  $opacity: 0.6,\r\n  $width: 100%,\r\n  $height: 100%,\r\n  $y: 0,\r\n  $x: 0\r\n) {\r\n  position: absolute;\r\n  top: $y;\r\n  right: $x;\r\n  width: $width;\r\n  height: $height;\r\n  background-color: rgba($color, $opacity);\r\n}\r\n","@import \"../../sass/helpers/mixin\";\r\n@import \"./groups\";\r\n\r\n.textCiper {\r\n  @extend %textCiper;\r\n}\r\n\r\n.fCenter,\r\n.fCenterH,\r\n.fCenterV {\r\n  @extend %fCenter;\r\n}\r\n.fCenterV {\r\n  flex-direction: column;\r\n}\r\n.fColC {\r\n  @extend %fColC;\r\n}\r\n.fColS {\r\n  @extend %fColS;\r\n}\r\n\r\n.fSpacerXC,\r\n.fSpacerC {\r\n  @extend %fSpacerC;\r\n}\r\n.fSpacerYC {\r\n  @extend %fSpacerYC;\r\n}\r\n\r\n.fSpacerX,\r\n.fSpacer {\r\n  @extend %fSpacer;\r\n}\r\n.fSpacerY {\r\n  @extend %fSpacerY;\r\n}\r\n\r\n.z1,\r\n.rZ1 {\r\n  @extend %z1;\r\n}\r\n\r\n.g-col-lg-3 {\r\n  @include responGridCol(18.75rem, 2.5rem);\r\n  @include in {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n\r\n.g-col-lg-4 {\r\n  @include responGridCol(15.625rem, 1.5rem);\r\n  @include in {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n\r\n.overlay {\r\n  @extend %overlay;\r\n}\r\n\r\n.table-tuti {\r\n  display: grid;\r\ngap: 1rem;\r\ncolor: var(--Ab-primary);\r\nborder-radius: 0.625rem;\r\nmargin: 2rem 0;\r\noverflow: hidden;\r\n.haed {\r\n  font-weight: bold;\r\n  text-transform: capitalize;\r\n}\r\n.table-header {\r\n  background-color: #b7c5f28c;\r\n}\r\n.table-row {\r\n  .data {\r\n    display: flex;\r\n    gap: 0.3125rem;\r\n    align-items: center;\r\n  }\r\n&:nth-of-type(even) {\r\n    background-color: #b7c5f24a;\r\n  }\r\n}\r\n.table-header,\r\n.table-body {\r\n  border-radius: 0.625rem;\r\n  border: solid;\r\n  border-width: 0.125rem 0.1875rem 0.1875rem 0.125rem ;\r\n}\r\n.table-header,\r\n.row-loading,\r\n.table-row {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(10rem, 1fr));\r\n  align-items: center;\r\n  padding: 0.625rem 1rem;\r\n  min-height: 2.5rem;\r\n}\r\n.table-loading {\r\n  background-color: #d3dbf8;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  display: grid;\r\n  gap: 0.875rem;\r\n  border-radius: 0.4625rem;\r\n  .col-loading {\r\n    display: flex;\r\n    gap: 0.875rem;\r\n    padding-right: 2rem;\r\n  }\r\n  .long,\r\n  .short {\r\n    background-color: #212f53;\r\n    border-radius: 0.625rem;\r\n    height: 0.625rem;\r\n  }\r\n  .long{\r\n    opacity: 0.4;\r\n    width: 55%;\r\n  }\r\n  .short {\r\n    opacity: 0.7;\r\n    width: 35%;\r\n  }\r\n}\r\n.error-table{\r\n  border-radius: 0.375rem;\r\n  a {\r\n    color: #a31313;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n  }\r\n  p {\r\n    margin: 0;\r\n    padding: 0.625rem 1rem;\r\n    text-align: center;\r\n    background-color: #ab351f52;\r\n    font-weight: 500;\r\n  }\r\n}\r\n}\r\n","// mixin oneColG is mixin for control responsive of items in columns with screens\r\n\r\n@mixin oneColG($gap: 0rem) {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  gap: $gap;\r\n}\r\n\r\n// mixin twoColG is mixin for control responsive of items in columns with screens\r\n\r\n@mixin twoColG($gap: 0rem) {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: $gap;\r\n}\r\n\r\n// mixin responGridCol is mixin for control responsive of items in columns with screens\r\n\r\n@mixin responGridCol($min: 17rem, $gap: 1.5rem) {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax($min, 1fr));\r\n  gap: $gap;\r\n}\r\n","// mixin in is mixin for control responsive with screens\r\n// is upgreted from responMedia mixin\r\n\r\n@mixin in($madia: toMobile) {\r\n  @if $madia == smallMobile {\r\n    @media (max-width: 576px) {\r\n      @content;\r\n    }\r\n  } @else if $madia == fromSmallMobile {\r\n    @media (min-width: 576px) {\r\n      @content;\r\n    }\r\n  } @else if $madia == fromMobile {\r\n    @media (min-width: 767px) {\r\n      @content;\r\n    }\r\n  } @else if $madia == toMobile {\r\n    @media (max-width: 767px) {\r\n      @content;\r\n    }\r\n  } @else if $madia == small {\r\n    @media (min-width: 768px) and (max-width: 991px) {\r\n      @content;\r\n    }\r\n  } @else if $madia == fromSmall {\r\n    @media (min-width: 768px) {\r\n      @content;\r\n    }\r\n  } @else if $madia == toSmall {\r\n    @media (max-width: 991px) {\r\n      @content;\r\n    }\r\n  } @else if $madia == fromMedium {\r\n    @media (min-width: 992px) {\r\n      @content;\r\n    }\r\n  } @else if $madia == toMedium {\r\n    @media (max-width: 1199px) {\r\n      @content;\r\n    }\r\n  } @else if $madia == medium {\r\n    @media (min-width: 992px) and (max-width: 1199px) {\r\n      @content;\r\n    }\r\n  } @else if $madia == large {\r\n    @media (min-width: 1200px) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n// mixin madiaContainer is mixin for control content with all screens\r\n\r\n@mixin madiaContainer {\r\n  @include in(small) {\r\n    width: 750px;\r\n  }\r\n  @include in(medium) {\r\n    width: 970px;\r\n  }\r\n  @include in(large) {\r\n    width: 1170px;\r\n  }\r\n}\r\n@mixin showIn($media: toMobile) {\r\n  display: none;\r\n  @include in($media) {\r\n    display: block;\r\n  }\r\n}\r\n@mixin hideIn($media: toMobile) {\r\n  display: block;\r\n  @include in($media) {\r\n    display: none;\r\n  }\r\n}\r\n"]}